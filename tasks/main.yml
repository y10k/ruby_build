- name: packages (Debian)
  become: yes
  apt:
    name: "{{ item }}"
  with_items:
    - "{{ ruby_build_required_packages }}"
    - "{{ ruby_build_optional_packages_common }}"
    - "{{ ruby_build_optional_packages_debian }}"
  when: ansible_os_family == "Debian"

- name: packages (RedHat)
  become: yes
  yum:
    name: "{{ item }}"
  with_items:
    - "{{ ruby_build_required_packages }}"
    - "{{ ruby_build_optional_packages_common }}"
    - "{{ ruby_build_optional_packages_redhat }}"
  when: ansible_os_family == "RedHat"

- name: packages (other systems)
  become: yes
  yum:
    name: "{{ item }}"
  with_items:
    - "{{ ruby_build_required_packages }}"
    - "{{ ruby_build_optional_packages_common }}"
  when: not(ansible_os_family in ("Debian", "RedHat"))

- name: "local download diretory {{ ruby_build_download_local_dir }}"
  local_action:
    module: file
    state: directory
    path: "{{ ruby_build_download_local_dir }}"
    mode: 0755

- name: "download from {{ ruby_build_download_url }}/ruby-{{ ruby_build_version }}.tar.gz"
  local_action:
    module: get_url
    url: "{{ ruby_build_download_url }}/ruby-{{ ruby_build_version }}.tar.gz"
    dest: "{{ ruby_build_download_local_dir }}/ruby-{{ ruby_build_version }}.tar.gz"
    checksum: "{{ ruby_build_download_checksum }}"

- name: "remote unarchive directory {{ ruby_build_unarchive_remote_dir }}"
  file:
    state: directory
    path: "{{ ruby_build_unarchive_remote_dir }}"
    mode: 0755

- name: clear previous build
  file:
    state: absent
    path: "{{ ruby_build_unarchive_remote_dir }}/ruby-{{ ruby_build_version }}"
  when: ruby_build_clear_previous_build

- name: "unarchive source code from ruby-{{ ruby_build_version }}.tar.gz"
  unarchive:
    src: "{{ ruby_build_download_local_dir }}/ruby-{{ ruby_build_version }}.tar.gz"
    dest: "{{ ruby_build_unarchive_remote_dir }}"
    keep_newer: yes

- name: "configure {{ ruby_build_configure_options }}"
  command: "./configure {{ ruby_build_configure_options }}"
  args:
    chdir: "{{ ruby_build_unarchive_remote_dir }}/ruby-{{ ruby_build_version }}"

- name: "make {{ ruby_build_make_options }}"
  command: "make {{ ruby_build_make_options }}"
  args:
    chdir: "{{ ruby_build_unarchive_remote_dir }}/ruby-{{ ruby_build_version }}"

- name: make test
  command: make test
  args:
    chdir: "{{ ruby_build_unarchive_remote_dir }}/ruby-{{ ruby_build_version }}"

- name: make install
  become: yes
  command: make install
  args:
    chdir: "{{ ruby_build_unarchive_remote_dir }}/ruby-{{ ruby_build_version }}"

- name: make clean
  command: make clean
  args:
    chdir: "{{ ruby_build_unarchive_remote_dir }}/ruby-{{ ruby_build_version }}"
  when: ruby_build_make_clean

# Local Variables:
# indent-tabs-mode: nil
# End:
